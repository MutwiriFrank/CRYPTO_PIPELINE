version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    ports:
      - "5433:5432"
    volumes:
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres_data:/var/lib/postgresql/data 
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airflow && psql -U airflow -d crypto_db -c 'SELECT 1'"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - airflow-network


  spark:
    image: bitnami/spark:latest
    environment:
      - SPARK_MODE=master
      - SPARK_MASTER_HOST=spark
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - SPARK_DAEMON_MEMORY=1g
      - SPARK_PUBLIC_DNS=spark
      - SPARK_WORKER_CLEANUP_ENABLED=true
      - SPARK_WORKER_TIMEOUT=60
    ports:
      - "7077:7077"  # Master port
      - "8080:8080"  # Master UI
      - "4040:4040"  # Application UI
    volumes:
      - ./spark-defaults.conf:/opt/bitnami/spark/conf/spark-defaults.conf
      - ./spark-events:/tmp/spark-events  # For event logging
    networks:
      - airflow-network

  spark-worker:
    image: bitnami/spark:latest
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark:7077
      - SPARK_WORKER_MEMORY=2g
      - SPARK_WORKER_CORES=2
      - SPARK_WORKER_WEBUI_PORT=8082
      - SPARK_WORKER_DIR=/opt/bitnami/spark/work
      - SPARK_LOCAL_DIRS=/opt/bitnami/spark/temp
    ports:
      - "8082:8082"
    volumes:
      - ./spark-worker/work:/opt/bitnami/spark/work
      - ./spark-worker/temp:/opt/bitnami/spark/temp
      - ./spark-worker-entrypoint.sh:/entrypoint-fix.sh
    entrypoint: ["/bin/bash", "-c", "chmod +x /entrypoint-fix.sh && /entrypoint-fix.sh"]
    depends_on:
      - spark
    networks:
      - airflow-network

  airflow-init:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      - AIRFLOW__DATABASE__LOCK_TIMEOUT=30
      - JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64
      - SPARK_HOME=/opt/spark

    command: >
      bash -c "
      until airflow db check; do sleep 5; done &&
      airflow db migrate &&
      airflow users create \
      --username admin \
      --firstname Admin \
      --lastname User \
      --role Admin \
      --email franklinmutwiri95@gmail.com \
      --password admin"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./dags:/opt/airflow/dags
      - ./scripts:/opt/airflow/scripts

    networks:
      - airflow-network

  airflow-webserver:
    build:
      context: .
      dockerfile: Dockerfile 
    environment:
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      - AIRFLOW__WEBSERVER__SECRET_KEY=L6VEH0ShsRIsq57MMTmSy7wvlZXssSBKk10Bfyfwth0
      - EMAIL_USER=franklinmutwiri95@gmail.com
      - EMAIL_PASS=jdykvwraqelespni
      - JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64
      - SPARK_HOME=/opt/spark
      - AIRFLOW_CONN_SPARK_DEFAULT=spark://spark:7077?deploy-mode=client
      - AIRFLOW_CONN_POSTGRES_DEFAULT=postgres://airflow:airflow@postgres:5432/airflow
    ports:
      - "8081:8080"
    
    depends_on:
      - airflow-init
    volumes:
      - ./dags:/opt/airflow/dags
      - ./scripts:/opt/airflow/scripts
      - ./spark:/opt/airflow/spark
    command: webserver

    networks:
      - airflow-network


  airflow-scheduler:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      - AIRFLOW__WEBSERVER__SECRET_KEY=L6VEH0ShsRIsq57MMTmSy7wvlZXssSBKk10Bfyfwth0
      - JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64
      - SPARK_HOME=/opt/spark
    depends_on:
      - airflow-init
      - airflow-webserver
    volumes:
      - ./dags:/opt/airflow/dags
      - ./scripts:/opt/airflow/scripts
      - ./spark:/opt/airflow/spark
    command: scheduler

    networks:
      - airflow-network

    ports:
      - "7078:7078" 
      - "7080:7080" 

networks:
  airflow-network:
    driver: bridge


volumes:
  postgres_data:
